!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
GS_DEFAULT_HTTP_PORT	HTTPPack.h	/^		const static int GS_DEFAULT_HTTP_PORT = 80;$/;"	m	class:proxyserver::HTTPPack
GS_PACK_LEN	Test/SocketManagerTest.cpp	/^const static int GS_PACK_LEN = 256;$/;"	v	file:
GS_SERVER_PORT	ProxyServer.h	/^	const static int GS_SERVER_PORT = 3128;$/;"	v
GS_SERVER_PORT	Test/SocketManagerTest.cpp	/^const static int GS_SERVER_PORT = 6688;$/;"	v	file:
HTTPPack	HTTPPack.cpp	/^	HTTPPack::HTTPPack(const char *pack)$/;"	f	class:proxyserver::HTTPPack
HTTPPack	HTTPPack.h	/^	class HTTPPack$/;"	c	namespace:proxyserver
HTTP_PACK_H	HTTPPack.h	15;"	d
MS_BACK_LOG	connection/SocketManager.h	/^		const static int MS_BACK_LOG = 1;$/;"	m	class:proxyserver::connection::SocketManager
MS_CANNT_GET_MSG	ThreadManager.cpp	/^	const string ThreadManager::MS_CANNT_GET_MSG $/;"	m	class:proxyserver::ThreadManager	file:
MS_CANNT_GET_MSG	ThreadManager.h	/^		const static string MS_CANNT_GET_MSG;$/;"	m	class:proxyserver::ThreadManager
MS_TIME_OUT	connection/SocketManager.cpp	/^	const struct timeval SocketManager::MS_TIME_OUT = {8, 0};$/;"	m	class:proxyserver::connection::SocketManager	typeref:struct:proxyserver::connection::SocketManager::	file:
MS_TIME_OUT	connection/SocketManager.h	/^		const static struct timeval MS_TIME_OUT;$/;"	m	class:proxyserver::connection::SocketManager	typeref:struct:proxyserver::connection::SocketManager::timeval
PROXY_SERVER_H	ProxyServer.h	15;"	d
ProxyServer	ProxyServer.h	/^		ProxyServer(int serverPort): m_serverPort(serverPort) {}$/;"	f	class:proxyserver::ProxyServer
ProxyServer	ProxyServer.h	/^	class ProxyServer$/;"	c	namespace:proxyserver
SIGINTHandler	ProxyServer.cpp	/^	void ProxyServer::SIGINTHandler(int signum)$/;"	f	class:proxyserver::ProxyServer
SOCKET_MANAGER_H	connection/SocketManager.h	15;"	d
SocketManager	connection/SocketManager.h	/^		SocketManager():m_socket(0){};$/;"	f	class:proxyserver::connection::SocketManager
SocketManager	connection/SocketManager.h	/^	class SocketManager$/;"	c	namespace:proxyserver::connection
TGREAD_MANAGER_H	ThreadManager.h	12;"	d
ThreadManager	ThreadManager.h	/^	class ThreadManager$/;"	c	namespace:proxyserver
closeSocket	connection/SocketManager.h	/^		void closeSocket() $/;"	f	class:proxyserver::connection::SocketManager
connection	connection/SocketManager.cpp	/^namespace connection$/;"	n	namespace:proxyserver	file:
connection	connection/SocketManager.h	/^namespace connection $/;"	n	namespace:proxyserver
createProxyThread	ThreadManager.cpp	/^	void ThreadManager::createProxyThread(int cliSocket)$/;"	f	class:proxyserver::ThreadManager
getHostName	HTTPPack.h	/^		string getHostName() $/;"	f	class:proxyserver::HTTPPack
getHostPort	HTTPPack.h	/^		int getHostPort() $/;"	f	class:proxyserver::HTTPPack
getPack	HTTPPack.h	/^		string getPack()$/;"	f	class:proxyserver::HTTPPack
getSocket	connection/SocketManager.h	/^		int getSocket() { return m_socket; }$/;"	f	class:proxyserver::connection::SocketManager
initSignalHandler	ProxyServer.cpp	/^	void ProxyServer::initSignalHandler()$/;"	f	class:proxyserver::ProxyServer
isValid	HTTPPack.h	/^		bool isValid()$/;"	f	class:proxyserver::HTTPPack
m_hostName	HTTPPack.h	/^		string m_hostName;$/;"	m	class:proxyserver::HTTPPack
m_hostPort	HTTPPack.h	/^		int m_hostPort;$/;"	m	class:proxyserver::HTTPPack
m_pack	HTTPPack.h	/^		string m_pack;$/;"	m	class:proxyserver::HTTPPack
m_serverPort	ProxyServer.h	/^		int m_serverPort;$/;"	m	class:proxyserver::ProxyServer
m_socket	connection/SocketManager.h	/^		int m_socket;$/;"	m	class:proxyserver::connection::SocketManager
m_valid	HTTPPack.h	/^		bool m_valid;$/;"	m	class:proxyserver::HTTPPack
main	ProxyServer.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	Test/HTTPPackTest.cpp	/^int main()$/;"	f
main	Test/SocketManagerTest.cpp	/^int main(int argc, char *argv[]) $/;"	f
makeClientSocket	connection/SocketManager.cpp	/^	int SocketManager::makeClientSocket(string hostName,int portNum)$/;"	f	class:proxyserver::connection::SocketManager
makeServerSocket	connection/SocketManager.h	/^		int makeServerSocket(int portNum)$/;"	f	class:proxyserver::connection::SocketManager
makeServerSocketQ	connection/SocketManager.cpp	/^	int SocketManager::makeServerSocketQ(int portNum,int backlog) $/;"	f	class:proxyserver::connection::SocketManager
myWrite	ThreadManager.cpp	/^	int myWrite(int fd, const void *buf, int count)$/;"	f	namespace:proxyserver
processRequest	ThreadManager.cpp	/^	void * ThreadManager::processRequest(void *cliSocketP)$/;"	f	class:proxyserver::ThreadManager
proxyserver	HTTPPack.cpp	/^namespace proxyserver$/;"	n	file:
proxyserver	HTTPPack.h	/^namespace proxyserver $/;"	n
proxyserver	ProxyServer.cpp	/^namespace proxyserver {$/;"	n	file:
proxyserver	ProxyServer.h	/^namespace proxyserver $/;"	n
proxyserver	ThreadManager.cpp	/^namespace proxyserver {$/;"	n	file:
proxyserver	ThreadManager.h	/^namespace proxyserver {$/;"	n
proxyserver	connection/SocketManager.cpp	/^namespace proxyserver $/;"	n	file:
proxyserver	connection/SocketManager.h	/^namespace proxyserver $/;"	n
startServer	ProxyServer.cpp	/^	void ProxyServer::startServer() $/;"	f	class:proxyserver::ProxyServer
transBetSerAndCli	ThreadManager.cpp	/^	void ThreadManager::transBetSerAndCli(int serSock, int cliSock)$/;"	f	class:proxyserver::ThreadManager
~SocketManager	connection/SocketManager.h	/^		~SocketManager() { closeSocket(); }$/;"	f	class:proxyserver::connection::SocketManager
